{"version":3,"sources":["components/pokemon/Pokemon.js","components/form/GenerationList.js","components/form/TypeList.js","components/form/PokemonSearch.js","components/form/FilterForm.js","components/pokemon/PokemonList.js","pages/PokedexPage.js","App.js","serviceWorker.js","index.js"],"names":["Pokemon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isBack","isShiny","handleSpriteClick","bind","assertThisInitialized","handleShinyClick","renderSprite","renderType","prevProps","pokemon","setState","prevState","_this$state","react_default","a","createElement","src","sprites","back_shiny","alt","back_default","front_shiny","front_default","types","length","Fragment","type","name","_this2","Button","color","size","style","onClick","className","_this3","Card","margin","textTransform","height","width","CardHeader","id","renderShinyButton","CardBody","CardText","Component","GenerationList","active","handleChange","event","onGenChange","target","value","genSelect","Input","bsSize","onChange","e","FormGroup","row","Label","TypeList","onTypeChange","typeSelect","map","key","charAt","toUpperCase","slice","PokemonSearch","entry","onSearchChange","FilterForm","collapse","toggle","handleSearchChange","handleGenChange","handleTypeChange","generation","marginBottom","block","Collapse","isOpen","form_PokemonSearch","form_GenerationList","form_TypeList","PokemonList","pokemonInfo","query","apiCallsInProgress","loading","Axios","get","then","response","data","results","monster","getPokemonInfo","url","catch","error","poke_url","concat","toConsumableArray","sort","b","getPokemon","filter","includes","toLowerCase","toString","pokemonList","filterPokemon","overflowY","display","backgroundColor","Row","index","pokemon_Pokemon","Alert","textAlign","Spinner","form_FilterForm","renderPokemonList","Pokedex","pokemon_PokemonList","App","PokedexPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55b0d1c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, CardText, Button } from 'reactstrap';\r\n\r\nclass Pokemon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBack: false,\r\n      isShiny: false\r\n    };\r\n    this.handleSpriteClick = this.handleSpriteClick.bind(this);\r\n    this.handleShinyClick = this.handleShinyClick.bind(this);\r\n    this.renderSprite = this.renderSprite.bind(this);\r\n    this.renderType = this.renderType.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.pokemon !== prevProps.pokemon) {\r\n      this.setState({ isBack: false, isShiny: false });\r\n    }\r\n  }\r\n\r\n  handleSpriteClick() {\r\n    this.setState(prevState => ({\r\n      isBack: !prevState.isBack\r\n    }));\r\n  }\r\n\r\n  handleShinyClick() {\r\n    this.setState(prevState => ({\r\n      isShiny: !prevState.isShiny\r\n    }));\r\n  }\r\n\r\n  renderSprite(pokemon) {\r\n    const { isBack, isShiny } = this.state;\r\n    if (isBack) {\r\n      if (isShiny) {\r\n        return <img src={pokemon.sprites.back_shiny} alt='back_shiny' />;\r\n      } else {\r\n        return <img src={pokemon.sprites.back_default} alt='back_default' />;\r\n      }\r\n    } else {\r\n      if (isShiny) {\r\n        return <img src={pokemon.sprites.front_shiny} alt='front_shiny' />;\r\n      } else {\r\n        return <img src={pokemon.sprites.front_default} alt='front_default' />;\r\n      }\r\n    }\r\n  }\r\n\r\n  renderType(pokemon) {\r\n    const types = pokemon.types;\r\n    if (types.length !== 1) {\r\n      return (\r\n        <>\r\n          {types[0].type.name}, {types[1].type.name}\r\n        </>\r\n      );\r\n    } else {\r\n      return <>{types[0].type.name}</>;\r\n    }\r\n  }\r\n\r\n  renderShinyButton() {\r\n    const { isShiny } = this.state;\r\n    if (isShiny) {\r\n      return (\r\n        <Button\r\n          color='none'\r\n          size='sm'\r\n          style={{ color: 'gold' }}\r\n          onClick={() => this.handleShinyClick()}>\r\n          <i className='fas fa-star' />\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          color='none'\r\n          size='sm'\r\n          style={{ color: 'black' }}\r\n          onClick={() => this.handleShinyClick()}>\r\n          <i className='fas fa-star' />\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const pokemon = this.props.pokemon;\r\n    return (\r\n      <Card\r\n        style={{\r\n          margin: '0 auto',\r\n          textTransform: 'capitalize',\r\n          height: '250px',\r\n          width: '300px'\r\n        }}>\r\n        <CardHeader>\r\n          {pokemon.id}: {pokemon.name} {this.renderShinyButton()}\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Button color='none' onClick={() => this.handleSpriteClick()}>\r\n            {this.renderSprite(pokemon)}\r\n          </Button>\r\n          <CardText>Type: {this.renderType(pokemon)}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass GenerationList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: 'All'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onGenChange(event.target.value);\r\n    this.setState({ active: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    let { active } = this.state;\r\n    const genSelect = (\r\n      <Input type='select' bsSize='sm'\r\n      value={active} onChange={e => this.handleChange(e)}>\r\n        <option>All</option>\r\n        <option>Generation I</option>\r\n        <option>Generation II</option>\r\n        <option>Generation III</option>\r\n        <option>Generation IV</option>\r\n        <option>Generation V</option>\r\n      </Input>\r\n    );\r\n    return (\r\n      <FormGroup row>\r\n        <Label>Generation:</Label>\r\n        {genSelect}\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationList;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass TypeList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: 'all'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onTypeChange(event.target.value);\r\n    this.setState({ active: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const typeList = [\r\n      'all',\r\n      'bug',\r\n      'dark',\r\n      'dragon',\r\n      'electric',\r\n      'fighting',\r\n      'fire',\r\n      'flying',\r\n      'ghost',\r\n      'grass',\r\n      'ground',\r\n      'ice',\r\n      'normal',\r\n      'poison',\r\n      'psychic',\r\n      'rock',\r\n      'steel',\r\n      'water'\r\n    ];\r\n    let { active } = this.state;\r\n    const typeSelect = (\r\n      <Input type='select' bsSize='sm'\r\n      value={active} onChange={e => this.handleChange(e)}>\r\n        {typeList.map(type => (\r\n          <option value={type} key={type}>\r\n            {type.charAt(0).toUpperCase() + type.slice(1)}\r\n          </option>\r\n        ))}\r\n      </Input>\r\n    );\r\n    return (\r\n      <FormGroup row>\r\n        <Label>Type:</Label>\r\n        {typeSelect}\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TypeList;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass PokemonSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      entry: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onSearchChange(event.target.value);\r\n    this.setState({ entry: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    let { entry } = this.state;\r\n    return (\r\n      <FormGroup row>\r\n        <Label>Name/Number:</Label>\r\n        <Input type='text' bsSize='sm'\r\n          value={entry}\r\n          onChange={e => this.handleChange(e)}\r\n        />\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonSearch;\r\n","import React, { Component } from 'react';\r\nimport { Button, Collapse, Card, CardHeader, CardBody } from 'reactstrap';\r\nimport GenerationList from './GenerationList';\r\nimport TypeList from './TypeList';\r\nimport PokemonSearch from './PokemonSearch';\r\n\r\nclass FilterForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { collapse: false };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleGenChange = this.handleGenChange.bind(this);\r\n    this.handleTypeChange = this.handleTypeChange.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(state => ({ collapse: !state.collapse }));\r\n  }\r\n\r\n  handleSearchChange(generation) {\r\n    this.props.onSearchChange(generation);\r\n  }\r\n\r\n  handleGenChange(generation) {\r\n    this.props.onGenChange(generation);\r\n  }\r\n\r\n  handleTypeChange(type) {\r\n    this.props.onTypeChange(type);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ width: '80vw', margin: '0 auto', marginBottom: '1%' }}>\r\n        <CardHeader>\r\n          <Button color='none' size='sm' block onClick={this.toggle}>\r\n            Filter Pokemon <i className='fas fa-search' />\r\n          </Button>\r\n        </CardHeader>\r\n        <Collapse isOpen={this.state.collapse}>\r\n          <CardBody>\r\n            <PokemonSearch onSearchChange={this.handleSearchChange} />\r\n            <GenerationList onGenChange={this.handleGenChange} />\r\n            <TypeList onTypeChange={this.handleTypeChange} />\r\n          </CardBody>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterForm;\r\n","import React, { Component } from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport { Alert, Card, Row, Spinner } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport FilterForm from '../form/FilterForm';\r\n\r\nclass PokemonList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemon: [],\r\n      pokemonInfo: [],\r\n      query: '',\r\n      generation: 'All',\r\n      type: 'all',\r\n      apiCallsInProgress: 0,\r\n      loading: false\r\n    };\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleGenChange = this.handleGenChange.bind(this);\r\n    this.handleTypeChange = this.handleTypeChange.bind(this);\r\n  }\r\n\r\n  async getPokemon() {\r\n    this.setState({ apiCallsInProgress: this.state.apiCallsInProgress + 1 });\r\n    await Axios.get('https://pokeapi.co/api/v2/pokemon/?limit=649')\r\n      .then(response => {\r\n        this.setState({\r\n          pokemon: response.data.results,\r\n          apiCallsInProgress: this.state.apiCallsInProgress - 1\r\n        });\r\n        this.state.pokemon.map(monster => (\r\n          <>{this.getPokemonInfo(monster.url)}</>\r\n        ));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  async getPokemonInfo(poke_url) {\r\n    this.setState({ apiCallsInProgress: this.state.apiCallsInProgress + 1 });\r\n    await Axios.get(poke_url)\r\n      .then(response => {\r\n        this.setState({\r\n          pokemonInfo: [...this.state.pokemonInfo, response.data].sort((a, b) =>\r\n            a.id > b.id ? 1 : -1\r\n          ),\r\n          apiCallsInProgress: this.state.apiCallsInProgress - 1\r\n        });\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  handleSearchChange(query) {\r\n    this.setState({ query });\r\n  }\r\n\r\n  handleGenChange(generation) {\r\n    this.setState({ generation });\r\n  }\r\n\r\n  handleTypeChange(type) {\r\n    this.setState({ type });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPokemon();\r\n  }\r\n\r\n  filterPokemon() {\r\n    let { pokemonInfo, query, generation, type } = this.state;\r\n    if (query !== '') {\r\n      pokemonInfo = pokemonInfo.filter(function isPokemon(pokemon) {\r\n        if (\r\n          pokemon.name.includes(query.toLowerCase()) ||\r\n          pokemon.id.toString() === query\r\n        ) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    switch (generation) {\r\n      case 'Generation I':\r\n        pokemonInfo = pokemonInfo.slice(0, 151);\r\n        break;\r\n      case 'Generation II':\r\n        pokemonInfo = pokemonInfo.slice(151, 251);\r\n        break;\r\n      case 'Generation III':\r\n        pokemonInfo = pokemonInfo.slice(251, 386);\r\n        break;\r\n      case 'Generation IV':\r\n        pokemonInfo = pokemonInfo.slice(386, 493);\r\n        break;\r\n      case 'Generation V':\r\n        pokemonInfo = pokemonInfo.slice(493, 649);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (type !== 'all') {\r\n      pokemonInfo = pokemonInfo.filter(function isType(pokemon) {\r\n        if (pokemon.types[1]) {\r\n          if (\r\n            pokemon.types[0].type.name === type ||\r\n            pokemon.types[1].type.name === type\r\n          ) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (pokemon.types[0].type.name === type) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return pokemonInfo;\r\n  }\r\n\r\n  renderPokemonList() {\r\n    let pokemonList = this.filterPokemon();\r\n    if (pokemonList.length > 1) {\r\n      return (\r\n        <Card\r\n          style={{\r\n            margin: '0 auto',\r\n            height: '70vh',\r\n            width: '80vw',\r\n            overflowY: 'scroll',\r\n            display: 'flex',\r\n            backgroundColor: '#eee'\r\n          }}>\r\n          <Row>\r\n            {pokemonList.map((monster, index) => (\r\n              <Pokemon key={index + 1} pokemon={monster} />\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      );\r\n    } else if (!pokemonList.length) {\r\n      return (\r\n        <Alert color='info' style={{ textAlign: 'center', margin: '5%' }}>\r\n          <h3>Oops!</h3>\r\n          <hr />\r\n          <p>No Pokemon Match This Criteria.</p>\r\n        </Alert>\r\n      );\r\n    } else {\r\n      return <Pokemon pokemon={pokemonList[0]} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const loading = this.state.apiCallsInProgress !== 0 || this.state.loading;\r\n\r\n    return (\r\n      <>\r\n        {loading ? (\r\n          <Spinner style={{ width: '10rem', height: '10rem', margin: '20%' }} />\r\n        ) : (\r\n          <>\r\n            <FilterForm\r\n              onSearchChange={this.handleSearchChange}\r\n              onGenChange={this.handleGenChange}\r\n              onTypeChange={this.handleTypeChange}\r\n            />\r\n            {this.renderPokemonList()}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonList;\r\n","import React from 'react';\r\nimport PokemonList from '../components/pokemon/PokemonList';\r\n\r\nconst Pokedex = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center', margin: '1%' }}>\r\n      <h3>Pokedex</h3>\r\n      <PokemonList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from 'react';\nimport Pokedex from './pages/PokedexPage';\n\nclass App extends Component {\n  render() {\n    return <Pokedex />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}